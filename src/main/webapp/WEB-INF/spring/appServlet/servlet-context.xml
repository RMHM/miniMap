<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 게시판 네이버 스마트 에디터용 리소스 경로 -->
	<mvc:resources location="/Boardeditor/" mapping="/Boardeditor/**"/>
	<mvc:resources location="/Boardeditor2/" mapping="/Boardeditor2/**"/>	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>
	
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<websocket:mapping handler="messageHandler" path="/message"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs />
	</websocket:handlers>
	<beans:bean id="viewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>
	<beans:bean id="jsonView"
		class="net.sf.json.spring.web.servlet.view.JsonView" />

	<!-- @ResponseBody 어노테이션을 제공하여 자바 객체를 자동으로 json 타입으로 변환 해 주는 viewResolver 
		객체 -->
	<beans:bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>
	<beans:bean id="echoHandler" class="com.kh.mhm.timeLine.common.SocketHandler"/>
	<beans:bean id="messageHandler" class="com.kh.mhm.message.common.NoticeHandler"/>
	
	<!-- 파일 업로드 시에 사용할 MultipartResolver 등록하기 -->
	 <beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	 	<beans:property name="maxUploadSize" value="10485760"/> <!-- 10MB -->
	 </beans:bean>
	
	<context:component-scan base-package="com.kh.mhm" />
	
	
	
</beans:beans>
